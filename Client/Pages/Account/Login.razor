@page "/Account/Login"
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject CustomStateProvider CustomStateProvider

<h3>Login</h3>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="LoginRequest">
    <DataAnnotationsValidator/>

    <div class="form-label">
        <label for="inputUsername" class="required">Username</label>
        <InputText id="inputUsername" class="form-control" @bind-Value="LoginRequest.UserName" autofocus placeholder="Username"/>
    </div>

    <div class="form-label">
        <label for="inputPassword" class="required">Password</label>
        <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="LoginRequest.Password"/>
    </div>

    <div class="form-check m-3">
        <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@LoginRequest.RememberMe"/>
        <label class="form-check-label" for="inputRememberMe">Remember Me</label>
    </div>

    <ValidationSummary/>

    <div>
        <button class="btn btn-primary" type="submit">Sign in</button>
        <label class="text-danger">@Error</label>
    </div>
</EditForm>

@code{
    LoginRequest LoginRequest { get; set; } = new LoginRequest();
    string Error { get; set; }

    async Task OnSubmit()
    {
        Error = null;
        try
        {
            await CustomStateProvider.Login(LoginRequest);
            ToastService.ShowSuccess("Login successful");
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }

}
