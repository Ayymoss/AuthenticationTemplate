@page "/Account/ChangePassword"
@inject NavigationManager NavigationManager
@inject CustomStateProvider CustomStateProvider
@inject IToastService ToastService
@attribute [Authorize]

<h3>Change Password</h3>


<EditForm class="form-changePwd" OnValidSubmit="OnSubmit" Model="ChangePasswordRequest">
    <DataAnnotationsValidator/>

    <div class="form-label">
        <label for="inputOldPassword" class="required">Current Password</label>
        <InputText type="password" id="inputOldPassword" class="form-control" @bind-Value="ChangePasswordRequest.OldPassword" autofocus />
    </div>

    <div class="form-label">
        <label for="inputPassword" class="required">New Password</label>
        <InputText type="password" id="inputPassword" class="form-control" @bind-Value="ChangePasswordRequest.Password"/>
    </div>
    
    <div class="form-label">
        <label for="inputPasswordConfirm" class="required">New Password Confirm</label>
        <InputText type="password" id="inputPasswordConfirm" class="form-control" @bind-Value="ChangePasswordRequest.ConfirmPassword"/>
    </div>

    <ValidationSummary/>

    <div>
        <button class="btn btn-primary" type="submit">Update Password</button>
        <label class="text-danger">@Error</label>
    </div>
</EditForm>


@code{
    ChangePasswordRequest ChangePasswordRequest { get; set; } = new();
    string Error { get; set; }

    async Task OnSubmit()
    {
        Error = null;
        try
        {
            await CustomStateProvider.ChangePassword(ChangePasswordRequest);
            ToastService.ShowSuccess("Password updated successfully.");
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }

}
